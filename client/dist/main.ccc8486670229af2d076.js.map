{"version":3,"sources":["webpack://trip-planner-client/./src/index.js"],"names":["tripList","document","querySelector","newTripButton","hambugerMenuButton","navItems","querySelectorAll","counter","Trip","name","this","expenses","total","id","price","push","Expense","i","length","addEventListener","tripName","prompt","newTrip","sectionElement","trip","section","createElement","className","tripHTMLContent","innerHTML","getTripSectionElement","appendChild","newTripExpenseList","expenseName","expensePrice","parseFloat","isNaN","alert","addExpense","newExpenseItemElement","li","toLocaleString","style","currency","getExpenseListItemElement","textContent","sumTotal","classList","contains","remove","add"],"mappings":"mYAIA,IAAMA,EAAWC,SAASC,cAAc,cAClCC,EAAgBF,SAASC,cAAc,aACvCE,EAAqBH,SAASC,cAAc,cAC5CG,EAAWJ,SAASK,iBAAiB,SAGvCC,EAAU,EAGRC,E,WACF,WAAYC,GAAM,UACdC,KAAKD,KAAOA,EACZC,KAAKC,SAAW,GAChBD,KAAKE,MAAQ,EACbF,KAAKG,GAAKN,E,oCAId,SAAWE,EAAMK,GACbJ,KAAKC,SAASI,KAAM,IAAIC,EAAQP,EAAMK,M,sBAI1C,WACIJ,KAAKE,MAAQ,EACb,IAAM,IAAIK,EAAI,EAAGA,EAAIP,KAAKC,SAASO,OAAQD,IACvCP,KAAKE,OAASF,KAAKC,SAASM,GAAGH,MACjC,OAAOJ,KAAKE,U,KAKhBI,E,GACF,WAAYP,EAAMK,GAAO,UACrBJ,KAAKD,KAAOA,EACZC,KAAKI,MAAQA,KAwBrBX,EAAcgB,iBAAiB,SAAS,WACpC,IAAIC,EAAWC,OAAO,yBACtB,GAAID,EAAU,CACV,IAAME,EAAU,IAAId,EAAKY,GACnBG,EAvBd,SAAgCC,GAC5B,IAAMC,EAAUxB,SAASyB,cAAc,WACvCD,EAAQZ,GAAR,uBAA6BW,EAAKX,IAClCY,EAAQE,UAAY,0BACpB,IAAMC,EAAkB,yBAAH,OACXJ,EAAKf,KADM,uFAE8Ce,EAAKX,GAFnD,qFAIgCW,EAAKX,GAJrC,4JAOqBW,EAAKX,GAP1B,cAOkCW,EAAKZ,MAPvC,8BAWrB,OADAa,EAAQI,UAAYD,EACbH,EAQoBK,CAAsBR,GAC7CtB,EAAS+B,YAAYR,GACQtB,SAASC,cAAT,0BAA0CoB,EAAQT,KAC1DM,iBAAiB,SAAS,WAC3C,IAAMa,EAAqB/B,SAASC,cAAT,wBAAwCoB,EAAQT,KACvEoB,EAAcZ,OAAO,4BACzB,GAAIY,EAAa,CACb,IAAIC,EAAeC,WAAYd,OAAO,oCACtC,GAAKe,MAAMF,GACPG,MAAM,qCACH,CACHf,EAAQgB,WAAWL,EAAaC,GAChC,IAAMK,EAgB1B,SAAmCf,GAC/B,IAAMgB,EAAKvC,SAASyB,cAAc,MAClCc,EAAGb,UAAY,eACfa,EAAG3B,GAAH,uBAAwBW,EAAKX,IAC7B,IAAK,IAAII,EAAI,EAAGA,EAAIO,EAAKb,SAASO,OAAQD,IACtCuB,EAAGX,UAAH,2CACSL,EAAKb,SAASM,GAAGR,KAD1B,iCAESe,EAAKb,SAASM,GAAGH,MAAM2B,eAAe,QAAS,CAACC,MAAM,WAAYC,SAAS,QAFpF,kBAKJ,OAAOH,EA1BuCI,CAA0BtB,GACxDU,EAAmBD,YAAYQ,GACHtC,SAASC,cAAT,sBAAsCoB,EAAQT,KACtDgC,YAAcvB,EAAQwB,WAAWL,eAAe,QAAS,CAACC,MAAM,WAAYC,SAAS,cAG7GN,MAAM,oCAGd9B,SAEA8B,MAAM,gCAmBdjC,EAAmBe,iBAAiB,SAAS,WACzC,IAAM,IAAIF,EAAI,EAAGA,EAAIZ,EAASa,OAAQD,IAC7BZ,EAASY,GAAG8B,UAAUC,SAAS,UAChC3C,EAASY,GAAG8B,UAAUE,OAAO,UAE7B5C,EAASY,GAAG8B,UAAUG,IAAI,c","file":"main.ccc8486670229af2d076.js","sourcesContent":["import './normalize.css';\r\nimport './index.css';\r\n\r\n// Selectors\r\nconst tripList = document.querySelector('.trip-list');\r\nconst newTripButton = document.querySelector('.new-trip');\r\nconst hambugerMenuButton = document.querySelector('.hamburger');\r\nconst navItems = document.querySelectorAll('.item');\r\n\r\n// Counter for id generation\r\nlet counter = 0;\r\n\r\n// Blueprint to create new trip object\r\nclass Trip {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.expenses = [];\r\n        this.total = 0;\r\n        this.id = counter;\r\n    }\r\n\r\n    // Add new expense object to expenses array\r\n    addExpense(name, price) {\r\n        this.expenses.push( new Expense(name, price) );\r\n    }\r\n\r\n    // Calculate total of trip expenses\r\n    sumTotal() {\r\n        this.total = 0;\r\n        for ( let i = 0; i < this.expenses.length; i++) {\r\n            this.total += this.expenses[i].price;\r\n        } return this.total;\r\n    }\r\n}\r\n\r\n// Blueprint to create new expense object\r\nclass Expense {\r\n    constructor(name, price) {\r\n        this.name = name;\r\n        this.price = price;\r\n    }\r\n}\r\n\r\n// Generate trip section element and contents\r\nfunction getTripSectionElement (trip) {\r\n    const section = document.createElement('section');\r\n    section.id = `trip-section-${trip.id}`;\r\n    section.className = \"trip column center flex\";\r\n    const tripHTMLContent = `        \r\n        <h2>${trip.name}</h2>\r\n        <ul class=\"expense-list column center flex\" id=\"expense-list-${trip.id}\">\r\n        </ul>\r\n        <button class=\"add-expense\" id=\"expense-button-${trip.id}\">Add Expense</button>\r\n        <div class=\"trip-total center flex\">\r\n            <p>Trip Total</p>\r\n            <p class=\"total\" id=\"trip-total-${trip.id}\">$${trip.total}</p>\r\n        </div>\r\n    `;\r\n    section.innerHTML = tripHTMLContent;\r\n    return section\r\n}\r\n\r\n// Button to create new trip object and populate it with content\r\nnewTripButton.addEventListener('click', () => {\r\n    let tripName = prompt(\"Please name your trip\");\r\n    if (tripName) {\r\n        const newTrip = new Trip(tripName)\r\n        const sectionElement = getTripSectionElement(newTrip);\r\n        tripList.appendChild(sectionElement);\r\n        const newTripExpenseButton = document.querySelector(`#expense-button-${newTrip.id}`);\r\n        newTripExpenseButton.addEventListener('click', () => {\r\n            const newTripExpenseList = document.querySelector(`#expense-list-${newTrip.id}`);\r\n            let expenseName = prompt(\"Please name your expense\");\r\n            if (expenseName) {\r\n                let expensePrice = parseFloat( prompt(\"Please enter the expense amount\") );\r\n                if ( isNaN(expensePrice) ) {\r\n                    alert(\"Please enter a numeric value.\")\r\n                } else {\r\n                    newTrip.addExpense(expenseName, expensePrice);\r\n                    const newExpenseItemElement = getExpenseListItemElement(newTrip);\r\n                    newTripExpenseList.appendChild(newExpenseItemElement);\r\n                    const newTripTotalElement = document.querySelector(`#trip-total-${newTrip.id}`);\r\n                    newTripTotalElement.textContent = newTrip.sumTotal().toLocaleString(\"en-US\", {style:\"currency\", currency:\"USD\"});\r\n                }\r\n            } else {\r\n                alert(\"Please enter an expense name.\")\r\n            }\r\n        });\r\n        counter++;\r\n    } else {\r\n        alert(\"Please enter a trip name.\")\r\n    }\r\n});\r\n\r\n// Generate expense li elements and contents \r\nfunction getExpenseListItemElement(trip) {\r\n    const li = document.createElement(\"li\");\r\n    li.className = \"expense flex\";\r\n    li.id = `expense-item-${trip.id}`;\r\n    for (let i = 0; i < trip.expenses.length; i++ ) {\r\n        li.innerHTML = `                \r\n            <p>${trip.expenses[i].name}</p> \r\n            <p>${trip.expenses[i].price.toLocaleString(\"en-US\", {style:\"currency\", currency:\"USD\"})}</p>\r\n        `;\r\n    }\r\n    return li;\r\n}\r\n\r\n// Hamburger Menu\r\nhambugerMenuButton.addEventListener('click', () => { \r\n    for ( let i = 0; i < navItems.length; i++ ) {\r\n        if ( navItems[i].classList.contains(\"hidden\") ) {\r\n            navItems[i].classList.remove(\"hidden\");\r\n        } else {\r\n            navItems[i].classList.add(\"hidden\");\r\n        }\r\n    }\r\n});"],"sourceRoot":""}